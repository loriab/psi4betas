# cc-pvdz H2O Test CISD, AQCC, ACPF Energy/Properties
refnuc     = 8.80146552997   # TEST
refscf     = -76.0214184452  # TEST
refcisd    = -0.20576704897  # TEST
refcepa0   = -0.217857487817 # TEST
refcepa1   = -0.214363573811 # TEST
refcepa2   = -0.216862220196 # TEST
refcepa3   = -0.211995035292 # TEST
refacpf    = -0.214525653939 # TEST
refaqcc    = -0.211850393774 # TEST
refDipHF   = 2.09546990908   # TEST
refDipCEPA = 1.92023515566   # TEST
refDipCISD = 1.98873708462   # TEST
refDipACPF = 1.94427081117   # TEST
refDipAQCC = 1.96020546503   # TEST
refQdpCEPA = -5.79763143854  # TEST
refQdpCISD = -5.75628641309  # TEST
refQdpACPF = -5.78358853983  # TEST
refQdpAQCC = -5.77402246385  # TEST

molecule h2o {
0 1
O
H 1 1.0 
H 1 1.0 2 104.5
symmetry c1
}

plugin_load('./plugin_cepa.so')

set {
  r_convergence 1e-7
  basis cc-pvdz
  freeze_core true
}

scf_energy = scf()
transqt2()

set cepa_level cepa1
plugin('./plugin_cepa.so')

set cepa_level cepa2
plugin('./plugin_cepa.so')

set cepa_level cepa3
plugin('./plugin_cepa.so')

# also evaluate dipoles/quadrupoles for the stationary methods
set dipmom true
set print 2

set cepa_level cepa0
plugin('./plugin_cepa.so')

set cepa_level acpf
plugin('./plugin_cepa.so')

set cepa_level aqcc
plugin('./plugin_cepa.so')

set cepa_level cisd
plugin('./plugin_cepa.so')

# also check against detci cisd implementation
energy("cisd")


clean()
